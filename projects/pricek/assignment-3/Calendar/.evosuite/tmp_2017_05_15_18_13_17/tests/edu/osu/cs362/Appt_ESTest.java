/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 01:16:37 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.osu.cs362.Appt;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Appt_ESTest extends Appt_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Appt appt0 = new Appt(1, 1, 1, (-16), 1, "yKjR7MA6R,$%|8", "yKjR7MA6R,$%|8");
      assertEquals(-16, appt0.getStartMonth());
      
      appt0.setStartMonth(1);
      String string0 = appt0.toString();
      assertEquals("\t1/1/1 at 1:1am ,yKjR7MA6R,$%|8, yKjR7MA6R,$%|8\n", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Appt appt0 = new Appt(376, 376, 0, 376, 0, "", "");
      appt0.getTitle();
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(376, appt0.getStartMonth());
      assertEquals(376, appt0.getStartMinute());
      assertEquals(0, appt0.getStartDay());
      assertEquals(376, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, "hq", "c");
      int int0 = appt0.getStartYear();
      assertEquals(0, appt0.getStartHour());
      assertEquals("c", appt0.getDescription());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(0, int0);
      assertEquals(0, appt0.getStartMonth());
      assertEquals("hq", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Appt appt0 = new Appt(256, (-1211), 256, 256, 256, "S", "S");
      int int0 = appt0.getStartYear();
      assertEquals(256, appt0.getStartMonth());
      assertEquals(256, appt0.getStartDay());
      assertEquals("S", appt0.getTitle());
      assertEquals(-1211, appt0.getStartMinute());
      assertEquals(256, int0);
      assertFalse(appt0.getValid());
      assertEquals(256, appt0.getStartHour());
      assertEquals("S", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Appt appt0 = new Appt(1, 0, 0, 0, 0, "pm", "u_");
      int int0 = appt0.getStartMonth();
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, int0);
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(1, appt0.getStartHour());
      assertEquals("u_", appt0.getDescription());
      assertEquals(0, appt0.getStartDay());
      assertEquals("pm", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 84, 820, "1903-03-01T00:00:00Z", "1903-03-01T00:00:00Z");
      int int0 = appt0.getStartMonth();
      assertEquals("1903-03-01T00:00:00Z", appt0.getDescription());
      assertEquals(0, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartHour());
      assertEquals(820, appt0.getStartYear());
      assertEquals(0, appt0.getStartDay());
      assertEquals("1903-03-01T00:00:00Z", appt0.getTitle());
      assertEquals(84, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 31, 0, "--%M--%z", "--%M--%z");
      int int0 = appt0.getStartMinute();
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartYear());
      assertEquals(0, int0);
      assertEquals(0, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals("--%M--%z", appt0.getDescription());
      assertEquals(31, appt0.getStartMonth());
      assertEquals("--%M--%z", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Appt appt0 = new Appt(59, 59, 59, (-61), 4167, "", "");
      int int0 = appt0.getStartMinute();
      assertEquals(-61, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(4167, appt0.getStartYear());
      assertEquals(59, appt0.getStartDay());
      assertEquals(59, appt0.getStartHour());
      assertEquals(59, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 2775, 2775, 2775, "RTVQ[SKSc", "org.apache.xerces.jaxp.datatype.DurationImpl");
      int int0 = appt0.getStartHour();
      assertEquals(0, int0);
      assertEquals("org.apache.xerces.jaxp.datatype.DurationImpl", appt0.getDescription());
      assertEquals("RTVQ[SKSc", appt0.getTitle());
      assertEquals(2775, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(2775, appt0.getStartYear());
      assertEquals(2775, appt0.getStartMonth());
      assertEquals(0, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Appt appt0 = new Appt(3139, 3550, 2723, 3139, 3139, "", "9'");
      int int0 = appt0.getStartHour();
      assertEquals("9'", appt0.getDescription());
      assertEquals(2723, appt0.getStartDay());
      assertEquals("", appt0.getTitle());
      assertEquals(3550, appt0.getStartMinute());
      assertEquals(3139, int0);
      assertEquals(3139, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(3139, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, (-841), 0, 59, "B!r(", "l,sMT31");
      int int0 = appt0.getStartDay();
      assertEquals((-841), int0);
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartHour());
      assertEquals("l,sMT31", appt0.getDescription());
      assertFalse(appt0.getValid());
      assertEquals("B!r(", appt0.getTitle());
      assertEquals(59, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Appt appt0 = new Appt((-3008), (-3008), (-3008), 2000, 2000, "*,5:~,nuWlaL3^tTX(d", (String) null);
      String string0 = appt0.getDescription();
      assertEquals(2000, appt0.getStartYear());
      assertEquals(-3008, appt0.getStartMinute());
      assertEquals(-3008, appt0.getStartDay());
      assertEquals("*,5:~,nuWlaL3^tTX(d", appt0.getTitle());
      assertEquals("", string0);
      assertFalse(appt0.getValid());
      assertEquals(2000, appt0.getStartMonth());
      assertEquals(-3008, appt0.getStartHour());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Appt appt0 = new Appt((-7271), (-7271), (-7271), (-7271), 115, "&ZUT Q", "}U4Qy*8ONh(UA$3");
      assertEquals("}U4Qy*8ONh(UA$3", appt0.getDescription());
      
      appt0.setDescription("&ZUT Q");
      assertEquals(-7271, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Appt appt0 = new Appt(1, 1, 1, 0, Integer.MIN_VALUE, "KjRM?6R,$%|1", "9@#:M");
      assertEquals("9@#:M", appt0.getDescription());
      
      appt0.setDescription((String) null);
      assertEquals("KjRM?6R,$%|1", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Appt appt0 = new Appt(0, (-1774), 0, 0, 1220, "", "");
      appt0.setTitle("");
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartHour());
      assertEquals(-1774, appt0.getStartMinute());
      assertEquals(0, appt0.getStartDay());
      assertEquals(1220, appt0.getStartYear());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 2775, 2775, 2775, "RTVQ[SKSc", "org.apache.xerces.jaxp.datatype.DurationImpl");
      assertEquals("RTVQ[SKSc", appt0.getTitle());
      
      appt0.setTitle((String) null);
      assertEquals(2775, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Appt appt0 = new Appt((-1941), 26, 26, 12, 12, "pm", "(");
      String string0 = appt0.getTitle();
      assertEquals(26, appt0.getStartDay());
      assertEquals(26, appt0.getStartMinute());
      assertEquals("pm", string0);
      assertEquals(-1941, appt0.getStartHour());
      assertEquals("(", appt0.getDescription());
      assertEquals(12, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(12, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Appt appt0 = new Appt(0, (-1774), 0, 0, 1220, "", "");
      int int0 = appt0.getStartDay();
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(1220, appt0.getStartYear());
      assertEquals(0, int0);
      assertFalse(appt0.getValid());
      assertEquals(-1774, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Appt appt0 = new Appt((-1941), 26, 26, 12, 12, "pm", "(");
      boolean boolean0 = appt0.getValid();
      assertEquals(-1941, appt0.getStartHour());
      assertEquals("(", appt0.getDescription());
      assertFalse(boolean0);
      assertEquals(12, appt0.getStartMonth());
      assertEquals(26, appt0.getStartDay());
      assertEquals(12, appt0.getStartYear());
      assertEquals(26, appt0.getStartMinute());
      assertEquals("pm", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Appt appt0 = new Appt((-3008), (-3008), (-3008), 2000, 2000, "*,5:~,nuWlaL3^tTX(d", (String) null);
      int int0 = appt0.getStartHour();
      assertEquals("*,5:~,nuWlaL3^tTX(d", appt0.getTitle());
      assertEquals(2000, appt0.getStartMonth());
      assertEquals((-3008), int0);
      assertEquals(2000, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals("", appt0.getDescription());
      assertEquals(-3008, appt0.getStartMinute());
      assertEquals(-3008, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Appt appt0 = new Appt((-675), (-675), (-675), 23, (-675), "!kHG~/k$(#NI9*wDaC", "!kHG~/k$(#NI9*wDaC");
      int int0 = appt0.getStartYear();
      assertEquals(23, appt0.getStartMonth());
      assertEquals("!kHG~/k$(#NI9*wDaC", appt0.getDescription());
      assertEquals("!kHG~/k$(#NI9*wDaC", appt0.getTitle());
      assertEquals(-675, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals(-675, appt0.getStartDay());
      assertEquals((-675), int0);
      assertEquals(-675, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Appt appt0 = new Appt((-7271), (-7271), (-7271), (-7271), 115, "&ZUT Q", "}U4Qy*8ONh(UA$3");
      int int0 = appt0.getStartMinute();
      assertEquals(115, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals("}U4Qy*8ONh(UA$3", appt0.getDescription());
      assertEquals(-7271, appt0.getStartDay());
      assertEquals(-7271, appt0.getStartMonth());
      assertEquals((-7271), int0);
      assertEquals("&ZUT Q", appt0.getTitle());
      assertEquals(-7271, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Appt appt0 = new Appt(1, 1, 1, 0, Integer.MIN_VALUE, "KjRM?6R,$%|1", "9@#:M");
      String string0 = appt0.getDescription();
      assertEquals("KjRM?6R,$%|1", appt0.getTitle());
      assertEquals(1, appt0.getStartDay());
      assertEquals(-2147483648, appt0.getStartYear());
      assertEquals(1, appt0.getStartHour());
      assertEquals("9@#:M", string0);
      assertEquals(0, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(1, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Appt appt0 = new Appt((-2215), 1263, 80, (-2215), 80, "GW=", "GW=");
      int int0 = appt0.getStartMonth();
      assertEquals(80, appt0.getStartYear());
      assertEquals((-2215), int0);
      assertFalse(appt0.getValid());
      assertEquals("GW=", appt0.getTitle());
      assertEquals(1263, appt0.getStartMinute());
      assertEquals(80, appt0.getStartDay());
      assertEquals("GW=", appt0.getDescription());
      assertEquals(-2215, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, 12, 12, "|4TwK{Z{V4Y$X{l", "|4TwK{Z{V4Y$X{l");
      String string0 = appt0.toString();
      assertNotNull(string0);
      assertEquals("\t12/12/12 at 12:12pm ,|4TwK{Z{V4Y$X{l, |4TwK{Z{V4Y$X{l\n", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Appt appt0 = new Appt(1, 1, 1, 0, Integer.MIN_VALUE, "KjRM?6R,$%|1", "9@#:M");
      String string0 = appt0.toString();
      assertEquals(1, appt0.getStartDay());
      assertEquals("KjRM?6R,$%|1", appt0.getTitle());
      assertEquals("9@#:M", appt0.getDescription());
      assertEquals(-2147483648, appt0.getStartYear());
      assertEquals(1, appt0.getStartHour());
      assertEquals(1, appt0.getStartMinute());
      assertEquals(0, appt0.getStartMonth());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Appt appt0 = new Appt(23, 23, 23, 23, 23, (String) null, (String) null);
      assertEquals(23, appt0.getStartYear());
      assertEquals(23, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals(23, appt0.getStartMinute());
      assertEquals(23, appt0.getStartDay());
      assertEquals(23, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 31, 0, "--%M--%z", "--%M--%z");
      assertEquals(0, appt0.getStartDay());
      
      appt0.setStartDay(31);
      assertEquals(31, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Appt appt0 = new Appt(0, 59, 59, 0, (-2118), "", "");
      int int0 = appt0.getStartDay();
      assertFalse(appt0.getValid());
      assertEquals(-2118, appt0.getStartYear());
      assertEquals(59, appt0.getStartMinute());
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(59, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, 12, 12, "|4TwK{Z{V4Y$X{l", "|4TwK{Z{V4Y$X{l");
      appt0.setStartMinute(3740);
      assertEquals(3740, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Appt appt0 = new Appt(Integer.MIN_VALUE, Integer.MIN_VALUE, Integer.MIN_VALUE, 0, 0, "%Y%z", "");
      appt0.setStartHour(12);
      assertEquals(12, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Appt appt0 = new Appt(1, 1, 1, 0, Integer.MIN_VALUE, "KjRM?6R,$%|1", "9@#:M");
      appt0.setStartYear(12);
      assertEquals(12, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Appt appt0 = new Appt(1, 1, 1, 0, Integer.MIN_VALUE, "KjRM?6R,$%|1", "9@#:M");
      appt0.setStartMonth(12);
      boolean boolean0 = appt0.getValid();
      assertEquals(12, appt0.getStartMonth());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 11, 11, 11, "~@P:$JRN!H", "~@P:$JRN!H");
      String string0 = appt0.toString();
      assertEquals("\t11/11/11 at 11:11am ,~@P:$JRN!H, ~@P:$JRN!H\n", string0);
      assertNotNull(string0);
  }
}
